{
  extends: ["config:recommended", "schedule:monthly"],
  rebaseWhen: "conflicted",
  ignorePresets: [":prHourlyLimit2", ":ignoreModulesAndTests"],
  automerge: false,
  semanticCommits: false,
  commitMessagePrefix: "fix(deps): ",
  prConcurrentLimit: 200,
  minimumReleaseAge: "7 days",
  vulnerabilityAlerts: {
    enabled: true,
    labels: ["security"],
    schedule: ["at any time"],
    minimumReleaseAge: null,
  },
  customManagers: [
    {
      customType: "regex",
      fileMatch: ["^.github/workflows/.+.ya?ml$"],
      matchStrings: [
        "golangci\\-lint\\-action[\\s\\S]+?version\\: (?<currentValue>.*)",
      ],
      depNameTemplate: "golangci/golangci-lint",
      datasourceTemplate: "github-releases",
    },
    {
      customType: "regex",
      fileMatch: ["^.github/workflows/.+.ya?ml$"],
      matchStrings: [
        "cloudquery/setup\\-cloudquery[\\s\\S]+?version\\:\\s?(?<currentValue>.*)",
      ],
      packageNameTemplate: "cloudquery/cloudquery",
      depNameTemplate: "cli",
      datasourceTemplate: "github-releases",
      extractVersionTemplate: "^cli-(?<version>.+)$",
    },
    {
      customType: "regex",
      fileMatch: ["^.github/workflows/.+.ya?ml$"],
      matchStrings: [
        "setup\\-go[\\s\\S]+?go-version\\: \\^?(?<currentValue>[^$].*)",
        'matrix[\\s\\S]+?go\\: \\[\\s*"(?<currentValue>[^$].*)"\\s*\\]',
        "go-(?<currentValue>.*?)-",
      ],
      depNameTemplate: "go",
      datasourceTemplate: "golang-version",
      versioningTemplate: "loose",
    },
    {
      customType: "regex",
      fileMatch: ["\\.ya?ml$$"],
      matchStrings: [
        "version: [\"'](?<currentValue>.*)[\"'] # latest version of aws plugin",
      ],
      packageNameTemplate: "cloudquery/source/aws",
      depNameTemplate: "source-aws",
      datasourceTemplate: "custom.cloudquery",
    },
    {
      customType: "regex",
      fileMatch: ["\\.ya?ml$$"],
      matchStrings: [
        "version: [\"'](?<currentValue>.*)[\"'] # latest version of azure plugin",
      ],
      packageNameTemplate: "cloudquery/source/azure",
      depNameTemplate: "source-azure",
      datasourceTemplate: "custom.cloudquery",
    },
    {
      customType: "regex",
      fileMatch: ["\\.ya?ml$$"],
      matchStrings: [
        "version: [\"'](?<currentValue>.*)[\"'] # latest version of gcp plugin",
      ],
      packageNameTemplate: "cloudquery/source/gcp",
      depNameTemplate: "source-gcp",
      datasourceTemplate: "custom.cloudquery",
    },
    {
      customType: "regex",
      fileMatch: ["\\.ya?ml$$"],
      matchStrings: [
        "version: [\"'](?<currentValue>.*)[\"'] # latest version of postgresql plugin",
      ],
      packageNameTemplate: "cloudquery/destination/postgresql",
      depNameTemplate: "destination-postgresql",
      datasourceTemplate: "custom.cloudquery",
    },
    {
      customType: "regex",
      fileMatch: ["\\.ya?ml$$"],
      matchStrings: [
        "version: [\"'](?<currentValue>.*)[\"'] # latest version of sqlite plugin",
      ],
      packageNameTemplate: "cloudquery/destination/sqlite",
      depNameTemplate: "destination-sqlite",
      datasourceTemplate: "custom.cloudquery",
    },
    {
      customType: "regex",
      fileMatch: ["\\.ya?ml$$"],
      matchStrings: [
        "version: [\"'](?<currentValue>.*)[\"'] # latest version of (?<type>.*) (?<name>.*) plugin",
      ],
      packageNameTemplate: "cloudquery/{{{ type }}}/{{{ name }}}",
      depNameTemplate: "{{{ type }}}-{{{ name }}}",
      datasourceTemplate: "custom.cloudquery",
    },
  ],
  customDatasources: {
    cloudquery: {
      defaultRegistryUrlTemplate: "https://api.cloudquery.io/plugins/{{packageName}}/versions",
      transformTemplates: [
        '{ "releases": $map($.items, function($v) { { "version": $v.name, "releaseTimestamp": $v.published_at, "isDeprecated": $v.retracted, "changelogUrl": $join(["https://hub.cloudquery.io/plugins/", $replace("{{packageName}}", /(.+?)\\/(.+?)\\/(.+)/, "$2/$1/$3/"), $v.name, "/versions"]) } }), "homepage": "https://hub.cloudquery.io" }',
      ],
    },
  },
  packageRules: [
    {
      matchUpdateTypes: ["minor", "patch", "digest"],
      addLabels: ["automerge"],
    },
    {
      matchManagers: ["regex"],
      commitMessagePrefix: "chore(deps): ",
    },
    {
      matchManagers: ["github-actions"],
      matchUpdateTypes: ["minor", "patch", "digest"],
      groupName: "github-actions",
      commitMessagePrefix: "chore(deps): ",
    },
    {
      matchManagers: ["github-actions"],
      matchPackageNames: ["postgres"],
      allowedVersions: ["11"],
    },
    {
      matchDatasources: ["custom.cloudquery"],
      enabled: true,
      schedule: ["at any time"],
      minimumReleaseAge: null,
    },
    {
      matchSourceUrlPrefixes: ["https://github.com/cloudquery/"],
      enabled: true,
      schedule: ["at any time"],
      minimumReleaseAge: null,
    },
    {
      matchPackagePatterns: ["github.com/apache/arrow/*"],
      schedule: ["before 3am on Monday"],
    },
    {
      matchDatasources: ["custom.cloudquery"],
      groupName: "CloudQuery monorepo modules",
    },
  ],
}
